{
  "rsff": {
    "prefix": "rsff",
    "body": [
      "import React from \"react\";",
      "",
      "export default function $TM_FILENAME_BASE(props) {",
      "  return (",
      "    <div>",
      "      $1",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "React function component"
  },
  "rsfform": {
    "prefix": "rsfform",
    "body": [
      "import React from \"react\"",
      "import { useForm } from \"react-hook-form\"",
      "import { useMutation } from \"@tanstack/react-query\"",
      "import merge from \"lodash/merge\"",
      "",
      "import notification from \"@/components/Notifications/notification\"",
      "import SimpleNotification from \"@/components/Notifications/SimpleNotification\"",
      "import { gqlClient } from \"@/config/clients\"",
      "import SubmitFooter from \"@/components/Forms/SubmitFooter\"",
      "",
      "import StreamDecksButtonFormMutation from \"./graphql/StreamDecksButtonFormMutation.gql\"",
      "",
      "export default function ButtonActionForm(props) {",
      "  const { onSuccess = () => {}, item } = props",
      "",
      "  const { register, handleSubmit } = useForm()",
      "",
      "  const mutation = useMutation({",
      "    mutationFn: (data) =>",
      "      gqlClient.request(StreamDecksButtonFormMutation, {",
      "        ...merge(item, data),",
      "        id: item.id",
      "      })",
      "  })",
      "",
      "  const onSubmit = (data) => {",
      "    console.log(\"data:\", data)",
      "",
      "    return",
      "    mutation.mutate(data, {",
      "      onSuccess: () => {",
      "        notification(() => (",
      "          <SimpleNotification",
      "            title={item ? \"Successfully saved\" : \"Successfully created\"}",
      "          />",
      "        ))",
      "        onSuccess()",
      "      }",
      "    })",
      "  }",
      "",
      "  return (",
      "    <form onSubmit={handleSubmit(onSubmit)}>",
      "      <input type=\"text\" {...register(\"test\")} />",
      "      <SubmitFooter mutation={mutation} isEdit={!!item?.id} />",
      "    </form>",
      "  )",
      "}"
    ],
    "description": "form snippet"
  }
}
