{
	// Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log($1);"
		],
		"description": "Log output to console"
	},
	"JSDoc comment": {
		"prefix": "com",
		"body": [
			"/**",
			" * $1",
			" */"
		],
		"description": "JSDoc comment"
	},
	"Ajax fetch": {
		"prefix": "fetch",
		"body": [
			"fetch(url, { credentials: 'same-origin' })",
			"  .then(response => response.json())",
			"  .then((data) => {",
			"    // do stuff",
			"  })",
			"  .catch((err) => {",
			"    console.error('Fetch Failed');",
			"    console.error(err);",
			"  });"
		],
		"description": "Ajax fetch"
	},
	"vprops": {
		"prefix": "vprops",
		"body": [
			"const props = defineProps($0)"
		],
		"description": "props"
	},
	"vemit": {
		"prefix": "vemit",
		"body": [
			"const emit = defineEmits([$0])"
		],
		"description": "emits"
	},
	"vpropsts": {
		"prefix": "vpropsts",
		"body": [
			"type tProps = {",
			"  class?: string",
			"}",
			"",
			"const { class: className } = defineProps<tProps>()"
		],
		"description": "props with types"
	}
}
